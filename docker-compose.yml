version: '3.8'

services:
  webserver:
    image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.10.1} 
    environment:
      - LOAD_EX=n
      - AIRFLOWCOREEXECUTOR=SequentialExecutor
      - AIRFLOWAPIAUTH_BACKEND=airflow.auth.backends.basic
      - AIRFLOWWEBSERVERWORKERS=1
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./dbt:/opt/airflow/dbt
      # - ./script/entrypoint.sh:/opt/airflow/script/entrypoint.sh
      - ./requirements.txt:/opt/airflow/requirements.txt
      depends_on:
        - scheduler
      networks:
        - conection

  scheduler:
    image: ${AIRFLOW_IMAGE_NAME:-apache_airflow:2.10.1} 
    environment:
      - LOAD_EX=n
      - EXECUTOR=Sequential
      - AIRFLOWCOREEXECUTOR=SequentialExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW_WEBSERVER_SECRET_KEY=this_is_a_very_secured_key
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./dbt:/opt/airflow/dbt
      # - ./script/entrypoint.sh:/opt/airflow/script/entrypoint.sh
      - ./requirements.txt:/opt/airflow/requirements.txt
      #- ./airflow-data/airflow.cfg:/opt/airlfow/airflow.cfg
    depends_on:
      - webserver
    networks:
      - conection

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER: airflow
      - POSTGRES_PASSWORD: airflow
      - POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

networks:
  cconection:
    driver: "bridge"